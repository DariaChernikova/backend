### Конфигурация Data Source ###server.error.whitelabel.enabled=false

spring.datasource.url = jdbc:postgresql://localhost:5432/nc_backend
spring.datasource.username = back
spring.datasource.password = back

### Конфигурация HTTP-сервера ###
server.port = 8080
server.servlet.context-path=/backend


jwt.secret = secret
### Конфигурация Hibernate ###
#Устанавливаем диалект SQL
spring.jpa.database-platform = org.hibernate.dialect.PostgreSQLDialect
#Добавляем отладочный вывод запросов. В продакшене должна быть выключена
spring.jpa.show-sql = false
#Добавляем форматирование SQL-запросов до удобоваримого вида.
spring.jpa.properties.hibernate.format_sql=true
#Опция, позволяющая автоматически генерировать таблицы на основе сущностей
#Использует reflections.
#spring.jpa.hibernate.ddl-auto = create-drop

#Вместо этого заставляем использовать данные из schema.sql
spring.jpa.hibernate.ddl-auto = none

#В случае автоматической генерации сущностей можно добавить политику генерации имен таблиц
#Данная, например, заменит MyTable -> my_table
#spring.jpa.hibernate.naming.implicit-strategy = org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl