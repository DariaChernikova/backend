INSERT INTO public.tasks (id, number, section, deadline, description, file_path, attempts_max, task_name) VALUES (2, 2, 'Started', '2020-08-28 11:55:41.000000', 'Теперь Кекс доволен, он даже замурчал, ведь обновлённый дизайн ему понравился. Но где хороший дизайн, там и дополнительные правки: «добавь тексты», «вставь картинку», «поиграйся со шрифтами и отступами». У вас хорошо получилось починить сайт. Поможете дошлифовать его до конца?

Ну, раз вы согласны, то приступим к правкам текста. Боссу нужно добавить ещё один абзац в раздел «Почему я?» и ещё один пункт в список «Чему вы научитесь?».

Абзацы добавляются с помощью тега <p>, а элементы списка с помощью тега <li>. Эти теги надо вставить внутрь других тегов, поэтому обсудим правила вложенности подробнее.

В парные теги можно вкладывать другие теги. Например, как в списках:

<ul>
  <li>Элемент списка</li>
</ul>

У вложенных тегов всегда нужно следить за правильным порядком закрытия. Вложенный тег не может закрываться позже родительского:

<ul><li>Элемент списка</ul></li> <!-- Плохо  -->
<ul><li>Элемент списка</li></ul> <!-- Хорошо -->

И ещё, не все теги можно вкладывать в другие теги, например уже знакомый вам тег <h1> нельзя вкладывать в <p>. Эти правила вложенности для каждого тега вы узнаете постепенно по ходу изучения HTML', 'samples/Started/2.html', 10, 'Вложенные теги?');
INSERT INTO public.tasks (id, number, section, deadline, description, file_path, attempts_max, task_name) VALUES (3, 3, 'Started', '2020-08-28 12:04:18.000000', 'Отлично, сайт стал более информативным. А вот и новые правки: добавить в шапку сайта фотографию босса.

Как мы уже знаем, существуют не только парные, но и одиночные теги. Им не нужна вторая половинка, они самостоятельно прекрасно себя чувствуют. Например, тег <img> позволяет добавить картинку в разметку. Его мы и используем.

Но не всё так просто. Сам по себе <img> не имеет смысла. Чтобы этот тег был действительно нам полезен, необходимо написать внутри него адрес, ведущий к картинке. Делается это с помощью атрибута src:

<img src="keks.png">

Значение атрибута указывается с помощью знака равно и заключается в кавычки. У тега может быть несколько атрибутов. В этом случае они пишутся через пробел:

<тег атрибут1="значение1" атрибут2="значение2">

Например, картинке при желании можно задать размеры:

<img src="keks.png" width="200" height="100">

P.S. Ссылка на изображение: samples/Started/img/keks.jpg', 'samples/Started/3.html', 10, 'Атрибуты тегов?');
INSERT INTO public.tasks (id, number, section, deadline, description, file_path, attempts_max, task_name) VALUES (1, 1, 'Started', '2020-08-28 11:51:29.000000', 'О, кстати, познакомьтесь с боссом! Это Кекс — кот, разработчик и предприниматель.
Штука, которую вы удалили на одном из его сайтов, оказалась «стилями». В общем, вы отключили всё оформление. Сделаем вид, что мы работаем над долгожданным обновлением дизайна. А заодно всё починим и начнём разбираться с HTML и CSS.
Язык HTML отвечает за структуру и содержание страницы. Он состоит из тегов, а тег состоит из имени, заключённого между знаками «меньше» и «больше». Примеры тегов: <h1>, <p>, <ul>.
Теги бывают парными и одиночными. Парные теги могут содержать текст и другие теги. У парных тегов, в отличие от одиночных, есть вторая половинка — закрывающий тег. В закрывающих тегах перед именем ставится символ / («слэш»):
<h1>Текст заголовка</h1>
Ещё одна полезная вещь — это комментарии. Код, заключённый между символами <!-- и -->, работать не будет. Если эти символы удалить, то код заработает, это называется «раскомментировать». С помощью комментариев обычно временно отключают какой-то код или оставляют подсказки и разъяснения.', 'samples/Started/1.html', 10, 'Кто такой кекс?');
INSERT INTO public.tasks (id, number, section, deadline, description, file_path, attempts_max, task_name) VALUES (4, 1, 'Middle', '2020-07-28 12:20:43.000000', 'Кекс хочет, чтобы его сайт выделялся среди остальных не только содержанием, но и оформлением, поэтому прислал нам новую задачу — улучшить внешний вид страницы. В этом нам поможет язык для оформления HTML-документов, то есть CSS (что расшифровывается как «каскадные таблицы стилей»).

От предыдущего верстальщика осталось несколько фрагментов CSS-кода, которые он не успел применить к тегам. Мы доделаем его работу и сразу покажем боссу результат! Даже стилевой файл редактировать не придётся.

Но как это сделать? Как «приклеить» стили к нужным тегам? Обычно для этого используют атрибут class. Например, в нашем стилевом файле есть такой фрагмент кода:

.feature-kitten {…}

Эта запись означает, что стили, описанные внутри фигурных скобок, применятся к тегу с классом feature-kitten. В нашей разметке таких тегов нет, но мы можем добавить этот класс любому тегу и посмотреть, что с ним произойдёт. Например:

<p class="feature-kitten">…</p>

Давайте добавим и другие классы к тегам и посмотрим, какое оформление подготовил для них наш коллега.', 'samples/Middle/1.html', 5, 'CSS');